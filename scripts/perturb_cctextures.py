import os
import glob
import imageio
import numpy as np
import matplotlib.pyplot as plt
import cv2


if __name__ == "__main__":
    input_root = "/home/qiaog/datasets/cctextures/"
    output_root = "/home/qiaog/datasets/cctextures_processed/"
    used_assets = ['Planks013', 'PavingStones039', 'Rocks022', 'Tiles056', 'Ground025', 'PaintedPlaster003', 'WoodSiding007', 'Bricks025', 'Marble013', 'Wood017', 'Ground022', 'PavingStones064', 'Wood038', 'Leather009', 'Facade009', 'Bark006', 'Plastic009', 'Tiles055', 'CorrugatedSteel003', 'PavingStones075', 'PavingStones074', 'PavingStones095', 'Road002', 'Metal033', 'WoodSiding008', 'Rocks020', 'Concrete026', 'PavingStones070', 'Ground027', 'Fabric035', 'PavingStones043', 'PaintedPlaster007', 'PaintedPlaster011', 'PavingStones069', 'Rock039', 'PavingStones098', 'Concrete032', 'PaintedMetal006', 'Road001', 'Metal015', 'Rock028', 'Ground032', 'Carpet007', 'PaintedMetal017', 'PavingStones088', 'WoodFloor026', 'PaintedPlaster005', 'Rock035', 'Wood042', 'Ground018', 'Fabric033', 'Bricks021', 'Fabric034', 'MetalPlates008', 'Ground026', 'Rust004', 'PavingStones041', 'Tiles069', 'Ground039', 'Rock023', 'Gravel015', 'Marble011', 'Bricks031', 'Wood016', 'Carpet010', 'Bricks045', 'PaintedWood002', 'PaintedMetal018', 'SolarPanel004', 'Wood024', 'PaintedPlaster015', 'Tiles026', 'Leather014', 'PavingStones090', 'Fabric030', 'MetalPlates007', 'Lava001', 'Tiles034', 'PavingStones036', 'Metal031', 'PaintedWood005', 'Plastic008', 'Facade010', 'Concrete028', 'Bricks032', 'PavingStones072', 'Tiles029', 'Pipe001', 'Bricks044', 'Facade013', 'Concrete015', 'SolarPanel003', 'Road005', 'Planks011', 'Facade016', 'PaintedMetal011', 'Rust005', 'Bricks027', 'Tiles052', 'Planks017', 'Rocks017', 'Tiles065', 'Rock019', 'Tiles042', 'Rock018', 'WoodFloor036', 'PavingStones096', 'Ground037', 'Rock022', 'WoodFloor023', 'PaintedPlaster013', 'Metal025', 'Tiles038', 'Facade015', 'Tiles046', 'Facade008', 'Bricks047', 'Rocks023', 'Rocks014', 'Terrain002', 'Facade012', 'PavingStones037', 'PavingStones091', 'Bricks043', 'Wood044', 'Rocks005', 'Rocks015', 'WoodFloor029', 'Planks015', 'Rock020', 'Rocks008', 'Ground024', 'CorrugatedSteel005', 'Gravel010', 'PavingStones032', 'Tiles073', 'Marble014', 'Wood034', 'Tiles047', 'Cardboard004', 'Plastic006', 'PavingStones076', 'Tiles049', 'PavingStones057', 'SurfaceImperfections009', 'Tiles030', 'Candy001', 'Carpet009', 'PavingStones042', 'Terrazzo006', 'PavingStones040', 'WoodFloor035', 'PaintedMetal013', 'PaintedPlaster010', 'Wood023', 'PavingStones056', 'Paint004', 'Fabric029', 'PavingStones085', 'Tiles068', 'Ground031', 'Rocks012', 'Rocks016', 'Wood041', 'Concrete018', 'Planks022', 'Ground034', 'Rocks018', 'PaintedMetal010', 'PavingStones093', 'Tiles035', 'Tiles050', 'Moss001', 'Carpet011', 'Marble007', 'PaintedMetal009', 'PavingStones077', 'SurfaceImperfections010', 'Terrazzo004', 'PavingStones034', 'PavingStones092', 'Concrete034', 'Tiles079', 'WoodFloor018', 'Tiles082', 'Wood045', 'MetalPlates004', 'Metal022', 'MetalPlates006', 'Rock036', 'Cork001', 'Chip005', 'Metal027', 'Marble015', 'ChristmasTreeOrnament002', 'Leather013', 'Bricks029', 'Snow001', 'PavingStones031', 'Rock011', 'Bricks046', 'Rock029', 'PaintedMetal007', 'PavingStones068', 'Planks012', 'Rock032', 'MetalPlates009', 'WoodFloor030', 'Ground038', 'Bricks033', 'PaintedPlaster006', 'WoodFloor038', 'Tiles060', 'Marble009', 'PavingStones052', 'Wood026', 'PaintedPlaster001', 'SolarPanel002', 'PaintedMetal015', 'RoofingTiles003', 'Rocks010', 'WoodFloor027', 'Rock040', 'Bricks049', 'Terrazzo001', 'Leather010', 'Tiles078', 'Tiles045', 'Sponge003', 'Tiles031', 'Terrazzo008', 'Rock010', 'Metal013', 'WoodFloor019', 'Wood050', 'PavingStones062', 'Pipe004', 'Fabric025', 'PavingStones058', 'Snow002', 'Rock033', 'Asphalt016', 'Bark010', 'Bricks026', 'Wood032', 'Tiles036', 'Leather012', 'PavingStones094', 'PaintedPlaster012', 'Wood036', 'Rust003', 'Rocks007', 'Gravel013', 'RoofingTiles001', 'Carpet003', 'Metal017', 'Wood047', 'WoodFloor039', 'Metal026', 'Facade007', 'Tiles032', 'Ground033', 'full_info.csv', 'Ground020', 'Wood030', 'PavingStones061', 'Fabric027', 'Tiles081', 'Wood014', 'Plastic010', 'Leather024', 'PaintedPlaster016', 'Plaster003', 'Bricks051', 'WoodSiding003', 'Wood013', 'WoodFloor037', 'Rust002', 'Snow005', 'PavingStones048', 'PavingStones084', 'ChristmasTreeOrnament006', 'Carpet013', 'PavingStones081', 'Leather011', 'Tiles054', 'Rocks019', 'Concrete012', 'PaintedWood003', 'PaintedMetal012', 'PavingStones044', 'Tiles041', 'Fabric031', 'Bricks041', 'Wood015', 'WoodFloor034', 'PavingStones053', 'Plaster006', 'WoodFloor020', 'Tiles062', 'Concrete024', 'Tiles071', 'Ground029', 'Wood052', 'Tiles063', 'Rock027', 'Wood037', 'Tiles061', 'Fabric043', 'Gravel009', 'Metal021', 'Carpet008', 'Metal036', 'Ground023', 'Concrete017', 'Rock014', 'PavingStones060', 'WoodFloor033', 'WoodSiding002', 'Bricks050', 'Rocks009', 'Tiles058', 'Facade017', 'Tiles067', 'Bricks039', 'Planks008', 'Plaster002', 'Chip004', 'Moss002', 'PaintedPlaster014', 'Sponge002', 'Concrete033', 'Marble008', 'Wood021', 'Bricks019', 'Candy002', 'Facade011', 'Wood020', 'Bricks048', 'Terrain001', 'Paint003', 'ChristmasTreeOrnament005', 'Carpet005', 'Gravel012', 'Clay002', 'Pipe003', 'Fabric022', 'Planks009', 'Concrete031', 'Road006', 'Rock017', 'Metal030', 'Planks016', 'Tiles053', 'Fabric039', 'Paint001', 'Rock037', 'Rock034', 'PaintedMetal016', 'Tiles057', 'PavingStones087', 'WoodFloor041', 'Leather026', 'PavingStones083', 'Chip001', 'CorrugatedSteel004', 'Chip003', 'Chipboard002', 'Chip002', 'PavingStones035', 'Concrete013', 'Lava004', 'Wood033', 'Carpet014', 'Concrete029', 'Metal014', 'Bricks022', 'Bricks030', 'PavingStones046', 'PavingStones063', 'Tiles039', 'Tiles080', 'PavingStones067', 'RoofingTiles004', 'Bricks052', 'Rocks011', 'Leather022', 'MetalPlates005', 'Wood018', 'ChristmasTreeOrnament001', 'Pipe002', 'Terrazzo007', 'Leather023', 'Tiles066', 'Rocks021', 'PaintedMetal008', 'Wood031', 'Facade014', 'WoodSiding006', 'CorrugatedSteel001', 'Carpet001', 'Ground028', 'Wood027', 'Rock030', 'Ground019', 'Metal019', 'PavingStones047', 'Fabric038', 'PavingStones049', 'Rock021', 'Fabric026', 'PaintedMetal014', 'Rocks013', 'Lava005', 'PavingStones033', 'Wood043', 'Plaster005', 'Ground036', 'Rock015', 'Fabric024', 'WoodSiding004', 'Leather027', 'Marble006', 'PavingStones059', 'Cardboard001', 'Moss003', 'Rock031', 'Bark009', 'WoodFloor021', 'Fabric028', 'Tiles076', 'PavingStones050', 'Bricks020', 'Ground035', 'Ground030', 'Terrazzo003', 'Metal016', 'Fabric041', 'Bricks035', 'Carpet002', 'CorrugatedSteel002', 'PavingStones065', 'PaintedPlaster009', 'Fabric042', 'Clay001', 'Clay003', 'PavingStones089', 'Concrete014', 'Rock038', 'PavingStones055', 'Lava002', 'Wood049', 'Cardboard002', 'Concrete021', 'Tiles028', 'Fabric032', 'Bark007', 'Bricks036', 'SurfaceImperfections011', 'Wood048', 'Metal034', 'WoodSiding005', 'Leather025', 'PavingStones097', 'PavingStones073', 'SurfaceImperfections013', 'Concrete020', 'Tiles075', 'Bricks038', 'PavingStones079', 'Sponge001', 'Bricks034', 'WoodFloor024', 'PaintedWood004', 'Chipboard003', 'Marble010', 'Tiles033', 'Tiles072', 'Rock024', 'Carpet012', 'Metal035', 'Road007', 'Fabric037', 'Ground021', 'PaintedPlaster008', 'Metal028', 'Wood046', 'Road004', 'Road003', 'Terrain003', 'Bricks042', 'WoodFloor022', 'PaintedPlaster004', 'Bricks040', 'SolarPanel001', 'Concrete023', 'Paint005', 'Bark011', 'Tiles048', 'Terrazzo005', 'RoofingTiles002', 'Rocks006', 'Bricks023', 'Plaster004', 'Tiles059', 'WoodFloor028', 'Planks019', 'PavingStones051', 'Wood039', 'Marble012', 'Paint006', 'PaintedWood001', 'Plaster001', 'Metal020', 'Wood051', 'Tiles074', 'Gravel008', 'Concrete016', 'Carpet006', 'PavingStones054', 'WoodSiding001', 'Leather021', 'Planks020', 'Fabric040', 'Metal032', 'Cardboard003', 'Chip006', 'Asphalt015', 'Planks014', 'Concrete022', 'Tiles051', 'Wood019', 'SurfaceImperfections008', 'Rock012', 'Moss004', 'Wood029', 'ChristmasTreeOrnament003', 'Tiles044', 'Tiles064', 'Carpet004', 'Tiles037', 'WoodFloor025', 'Snow003', 'PavingStones086', 'Planks018', 'Smear007', 'Rock016', 'Wood040', 'Concrete030', 'PavingStones045', 'Rock026', 'Fabric036', 'Tiles043', 'Bark008', 'PavingStones071', 'Planks010', 'Plastic011', 'WoodFloor040', 'Bricks037', 'Clay004', 'Snow006', 'Tiles077', 'Gravel014', 'Metal029', 'Chipboard001', 'Tiles070', 'Terrazzo002', 'PavingStones038', 'Paint002', 'WoodFloor032', 'Fabric023', 'Metal023', 'Metal018', 'Snow004', 'Wood028', 'Wood035', 'Gravel011', 'RoofingTiles005', 'Rock025', 'Concrete019', 'Metal024', 'Tiles040', 'Plastic007', 'PavingStones080', 'Rust006', 'Lava003', 'PavingStones082', 'Chip007', 'ChristmasTreeOrnament004', 'Rock013', 'Wood025', 'Concrete025', 'Wood022', 'Concrete027', 'WoodFloor031', 'WoodFloor017', 'Planks021', 'Candy003', 'Tiles027', 'Bricks024', 'SurfaceImperfections012', 'PavingStones078', 'PavingStones066', 'WoodSiding009', 'Bricks028', 'PaintedPlaster002']

    for asset in used_assets:
        input_folder = os.path.join(input_root, asset)
        asset_files = glob.glob(os.path.join(input_folder, "*.jpg"))
        color_file = [f for f in asset_files if "Color" in f]
        if len(color_file) == 0:
            continue
        color_file = color_file[0]
        other_files = [f for f in asset_files if "Color" not in f]
        
        rgb = imageio.imread(color_file)
        if len(rgb.shape) == 2:
            rgb = cv2.cvtColor(rgb, cv2.COLOR_GRAY2RGB)
        hsv = cv2.cvtColor(rgb, cv2.COLOR_RGB2HSV)
        
        for i, shift in enumerate(range(0, 255, 20)):
            hsv_perturbed = hsv.copy()
            hsv_perturbed[:, :, 0] = ((hsv_perturbed[:, :, 0].astype(int) + shift) % 255).astype(np.uint8)
            rgb_perturbed = cv2.cvtColor(hsv_perturbed, cv2.COLOR_HSV2RGB)
            
            output_folder = os.path.join(output_root, "%s_%02d" % (asset, i))
            
            if not os.path.exists(output_folder):
                os.makedirs(output_folder)
            
            for src in other_files:
                dst = os.path.join(output_folder, os.path.basename(src))
                os.symlink(src, dst)
                
            dst_rgb = os.path.join(output_folder, os.path.basename(color_file))
            imageio.imwrite(dst_rgb, rgb_perturbed)